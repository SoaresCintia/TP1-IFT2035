;;(def test1 (let ((x 0)) (let ((x 1)) (* x 9))))                 ; ↝ 9 : Int
;; (def test2 (let ((x 1)) (let ((x 1)) (let ((x 0)) (* x 9)))))   ; ↝ 0 : Int

;; (def funInc (fun x (x+1)) (let ((funInc)) (funInc 1)))
;(def funInc (fun x (x+1)))
;;(let ((funInc)) (funInc 1))

(def r1 2)  
(def tr1 (if0 (- r1 2) 1 0))

(dec test (Int Int (Int Int -> Int) -> Int))
(def test (4 3 (+)))


